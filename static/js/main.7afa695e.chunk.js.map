{"version":3,"sources":["components/header.js","components/title.js","components/Chart.js","App.js","index.js"],"names":["Header","props","preRender","i","rates","push","value","key","className","type","currentValue","onChange","currentPriceHandler","currentLabelChange","calculateValue","calculateLabelChange","Title","Chart","charts","target","labels","current","data","map","val","index","item","ready","datasets","label","backgroundColor","borderWidth","App","useState","setData","currentPrice","setCurrentPrice","currentLabel","setCurrentLabel","calculateLabel","setCalculateLabel","history","setHistory","useEffect","abortController","AbortController","signal","fetch","then","json","koef","abort","time","getDate","console","log","sort","a","b","Date","secondTime","setUTCDate","getUTCDate","transformDate","elem","month","getUTCMonth","slice","day","year","getUTCFullYear","toString","e","makeCalculate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7afa695e.chunk.js","sourcesContent":["import React from 'react';\nconst Header = (props) => {\n    let preRender = [];\n    for (let i in props.rates) {\n        preRender.push(<option value={i} key={i}>{i}</option>);\n    }\n    return (\n        <form>\n            <fieldset className='d-flex mb-3 '>\n                <input type='number' className='form-control' value={props.currentValue} onChange={props.currentPriceHandler}></input>\n                <select className='form-control ' onChange={props.currentLabelChange}>\n                    {preRender}\n                </select>\n            </fieldset>\n            <fieldset className='d-flex'>\n                <input type='number' className='form-control' value={props.calculateValue()} ></input>\n                <select className='form-control' onChange={props.calculateLabelChange}>\n                    {preRender}\n                </select>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Title = ()=>{\n    return(\n        <h2>Exchange rates <small>with currency conversion</small></h2>\n    )\n}\n\nexport default Title;","import React , { useState }from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst Chart = ({charts , target , current}) => {\n        const labels= []\n        const data = [];\n        \n        charts.map((val , index)=>{\n            labels.push(val.item);\n            data.push(val.val)\n        })\n        const ready = {\n            labels,\n            datasets:[{\n                label:`${target}`,\n                data,\n                backgroundColor:['rgb(75 , 192 ,192 , 0.6)'],\n                borderWidth:3\n            }]\n        }\n\n    return (\n        <Line data={ready}></Line>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect, Fragment } from 'react';\nimport Header from './components/header';\nimport './App.css';\nimport Title from './components/title';\nimport Chart from './components/Chart'\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [currentPrice, setCurrentPrice] = useState(1);\n  const [currentLabel, setCurrentLabel] = useState('CAD');\n  const [calculateLabel, setCalculateLabel] = useState('CAD');\n  const [history, setHistory] = useState([]);\n\n  // fetch data after rendered page\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n\n    fetch(`https://api.exchangeratesapi.io/latest?base=${currentLabel}`, { signal: signal })\n      .then(data => data.json())\n      .then(koef => setData(koef.rates));\n\n    return function cleanup() {\n      abortController.abort();\n    }\n  }, [currentLabel]);\n\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    const time = getDate();\n    fetch(`https://api.exchangeratesapi.io/history?base=${currentLabel}&start_at=${time[1]}&end_at=${time[0]}&symbols=${calculateLabel}`,\n      { signal: signal })\n      .then(data => data.json())\n      .then(koef => {\n        const data = []\n        for (let item in koef.rates) {\n          data.push({ item, val: koef.rates[item][calculateLabel] })\n        }\n        console.log(data.sort((a, b) => a.item > b.item));\n        setHistory(data.sort((a, b) => a.item > b.item))\n      });\n\n    return function cleanup() {\n      abortController.abort();\n    }\n  }, [calculateLabel, currentLabel]);\n\n  const getDate = () => {\n    const time = new Date();\n    const secondTime = new Date();\n    secondTime.setUTCDate(secondTime.getUTCDate() - 20);\n    const transformDate = (elem) => {\n      const month = ('0' + elem.getUTCMonth()).slice(-2);\n      const day = ('0' + elem.getUTCDate()).slice(-2);\n      const year = elem.getUTCFullYear().toString();\n      return `${year}-${month}-${day}`;\n    }\n    return [transformDate(time), transformDate(secondTime)];\n  }\n  const currentLabelChange = async (e) => {\n    setCurrentLabel(e.target.value);\n  }\n  const calculateLabelChange = (e) => {\n    setCalculateLabel(e.target.value)\n\n  }\n  const currentPriceHandler = (e) => {\n    setCurrentPrice(e.target.value);\n  }\n\n  const makeCalculate = () => {\n    const result = currentPrice * data[calculateLabel];\n    return result;\n  }\n  makeCalculate();\n  return (\n    <Fragment>\n      <div className='jumbotron'>\n        <Title></Title>\n        <Header\n          currentValue={currentPrice}\n          calculateValue={makeCalculate}\n          rates={data}\n          currentLabelChange={currentLabelChange}\n          calculateLabelChange={calculateLabelChange}\n          currentPriceHandler={currentPriceHandler}\n        ></Header>\n      </div>\n      <div className='container pt-5'>\n        <Chart charts={history} target={calculateLabel}></Chart>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}